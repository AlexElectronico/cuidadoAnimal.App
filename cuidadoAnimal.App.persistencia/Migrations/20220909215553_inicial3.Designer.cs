// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cuidadoAnimal.App.persistencia;

namespace cuidadoAnimal.App.persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20220909215553_inicial3")]
    partial class inicial3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("cuidadoAnimal.App.Dominio.Animal", b =>
                {
                    b.Property<int>("IdCerdos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Especie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropietarioIdPersona")
                        .HasColumnType("int");

                    b.Property<string>("Raza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCerdos");

                    b.HasIndex("PropietarioIdPersona");

                    b.ToTable("Animales");
                });

            modelBuilder.Entity("cuidadoAnimal.App.Dominio.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPersona");

                    b.ToTable("Personas");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("cuidadoAnimal.App.Dominio.Visita", b =>
                {
                    b.Property<int>("IdVisita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("AnimalIdCerdos")
                        .HasColumnType("int");

                    b.Property<int?>("VeterinarioIdPersona")
                        .HasColumnType("int");

                    b.Property<string>("fechaVisita")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("peso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("recomendaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("temperatura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdVisita");

                    b.HasIndex("AnimalIdCerdos");

                    b.HasIndex("VeterinarioIdPersona");

                    b.ToTable("Visitas");
                });

            modelBuilder.Entity("cuidadoAnimal.App.Dominio.Propietario", b =>
                {
                    b.HasBaseType("cuidadoAnimal.App.Dominio.Persona");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NombreHacienda")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Propietario");
                });

            modelBuilder.Entity("cuidadoAnimal.App.Dominio.Veterinario", b =>
                {
                    b.HasBaseType("cuidadoAnimal.App.Dominio.Persona");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Veterinario_Direccion");

                    b.Property<string>("tarjetaProfecional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Veterinario");
                });

            modelBuilder.Entity("cuidadoAnimal.App.Dominio.Animal", b =>
                {
                    b.HasOne("cuidadoAnimal.App.Dominio.Propietario", "Propietario")
                        .WithMany()
                        .HasForeignKey("PropietarioIdPersona");

                    b.Navigation("Propietario");
                });

            modelBuilder.Entity("cuidadoAnimal.App.Dominio.Visita", b =>
                {
                    b.HasOne("cuidadoAnimal.App.Dominio.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalIdCerdos");

                    b.HasOne("cuidadoAnimal.App.Dominio.Veterinario", "Veterinario")
                        .WithMany()
                        .HasForeignKey("VeterinarioIdPersona");

                    b.Navigation("Animal");

                    b.Navigation("Veterinario");
                });
#pragma warning restore 612, 618
        }
    }
}
